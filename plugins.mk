# This is an erlang.mk plugin (which can be included from a normal Makefile)

GENERATED_HDR := Generated by erltup

TUP ?= tup
ERL ?= erl
ERLC ?= erlc
verbose ?=

# don't do anything if tup is not installed
ifneq (, $(shell which $(TUP)))

# don't generate the ebin Tupfile if there is no src dir
ifneq ($(wildcard src),)
ifeq ($(wildcard ebin/Tupfile),)
	EBIN_TUPFILE = ebin/Tupfile
endif
endif

deps:: .tup tup.config Tuprules.tup $(EBIN_TUPFILE)

distclean:: distclean-tup

.PHONY: distclean-tup

define del-generated-file
	@if test -n "$(1)" && \
	   grep -s -q "$(GENERATED_HDR)" $(1); then \
		rm -f $(1); \
	fi
endef

distclean-tup:
	rm -rf .tup
	$(call del-generated-file, ebin/Tupfile)
	$(call del-generated-file, Tuprules.tup)
	$(call del-generated-file, tup.config)

.tup:
	$(TUP) init

tup.config:
	$(verbose) $(ERL) -noshell -eval "file:write_file(\"$@\", \
		io_lib:format( \
			\"# $(GENERATED_HDR)~n~n\" \
			\"CONFIG_ERL=$(ERL)~n\" \
			\"CONFIG_ERLC=$(ERLC)~n\" \
			\"CONFIG_ERTS_INCLUDE_DIR=~s/erts-~s/include/~n\" \
			\"CONFIG_ERL_INTERFACE_INCLUDE_DIR=~s~n\" \
			\"CONFIG_ERL_INTERFACE_LIB_DIR=~s~n\" \
			\"CONFIG_ERTS_DIR=$(ERL_ERTS_DIR)~n\" \
			\"CONFIG_C_SRC_DIR=$(C_SRC_DIR)~n\" \
			\"CONFIG_DEPS_DIR=$(DEPS_DIR)~n\", \
			[code:root_dir(), erlang:system_info(version), \
			code:lib_dir(erl_interface, include), \
			code:lib_dir(erl_interface, lib)])), \
		halt()."

Tuprules.tup:
	$(verbose) printf "%s\n\n%s\n\n%s\n" \
			  "# $(GENERATED_HDR)" \
			  "include @(DEPS_DIR)/erltup/Tuprules.tup" > $@

ebin/Tupfile: ebin/
	$(verbose) printf "%s\n\n%s\n\n%s\n\n%s\n" \
			  "# $(GENERATED_HDR)" \
			  "include_rules" \
			  ": foreach ../src/*.erl |> !erlc |>" > $@

endif
